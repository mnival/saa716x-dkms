name: Generate deb file

on:
  push:
    branches: 
    - main

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ./.github/docker/
          platforms: linux/amd64
          push: false
          tags: debian-build:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker

      - name: Generate deb file
        run: |
          GITHUB_REPO_NAME="${GITHUB_REPOSITORY#*/}"
          docker run -v "${RUNNER_WORKSPACE}:/usr/local/src" debian-build:latest /bin/bash -c "cd /usr/local/src/${GITHUB_REPO_NAME}; debuild -us -uc -b"
          ls -la ${RUNNER_WORKSPACE}

      - name: Create release and upload file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x -v
          curl \
            -s \
            --fail \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/releases \
            -d '{"tag_name":"v0.0.0","target_commitish":"main","name":"v0.0.0","body":"v0.0.0","draft":false,"prerelease":false,"generate_release_notes":false}' \
            -o /tmp/curl.log
          UPLOAD_URL="$(jq -r .upload_url /tmp/curl.log | sed 's/{.*//g')"
          FILE="$(ls ${RUNNER_WORKSPACE}/saa716x-dkms_*_all.deb)"
          FILE_NAME="$(basename ${FILE})"
          curl \
            -s \
            --fail \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -T "${FILE}" \
            "${UPLOAD_URL}?name=${FILE_NAME}" \
            -o /tmp/curl
          cat /tmp/curl.log
          jq -r . /tmp/curl.log
